# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-19 14:37
from __future__ import unicode_literals

import User.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthenticationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_num', models.CharField(max_length=20, verbose_name='\u624b\u673a\u53f7\u7801')),
                ('code', models.CharField(max_length=6, verbose_name='\u9a8c\u8bc1\u7801')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_num', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='\u624b\u673a\u53f7(\u7528\u6237\u540d)')),
                ('avatar', models.ImageField(upload_to=User.models.profile_avatar, verbose_name='\u5934\u50cf')),
                ('gender', models.CharField(choices=[('m', '\u7537'), ('f', '\u5973')], max_length=1, verbose_name='\u6027\u522b')),
                ('signature', models.CharField(default='\u8bf4\u70b9\u4ec0\u4e48\u5427', max_length=1000, verbose_name='\u7b7e\u540d')),
                ('fans_num', models.IntegerField(default=0, verbose_name='\u7c89\u4e1d\u6570\u91cf')),
                ('follows_num', models.IntegerField(default=0, verbose_name='\u5173\u6ce8\u6570\u91cf')),
                ('status_num', models.IntegerField(default=0, verbose_name='\u52a8\u6001\u6570\u91cf')),
                ('comment_num', models.IntegerField(default=0, verbose_name='\u8bc4\u8bba\u6570\u91cf')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follows', models.ManyToManyField(related_name='fans', through='User.UserRelation', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '\u7528\u6237',
                'verbose_name_plural': '\u7528\u6237',
            },
            bases=(models.Model, utils.mixins.HasPublicID),
            managers=[
                ('objects', User.models.MyUserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userrelation',
            name='source_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follows_relation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrelation',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fans_relation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userrelation',
            unique_together=set([('source_user', 'target_user')]),
        ),
    ]
